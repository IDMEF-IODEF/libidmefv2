
/*****
*
* Copyright (C) 2001-2016 CS-SI. All Rights Reserved.
* Author: Yoann Vandoorselaere <yoann.v@prelude-ids.com>
*
* This file is part of the Libidmefv2 library.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 2, or (at your option)
* any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License along
* with this program; if not, write to the Free Software Foundation, Inc.,
* 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
*
*****/

/*
 * This file was automatically generated by our generator, version 1
 *
 * Do not make changes to this file unless you know what you are doing.
 * modify the template interface file instead.
 * IDMEFV2 version : Not released yet
 * Template file: generate-top-level-class-write.h.mako
 *
 */

#ifndef _LIBIDMEFV2_IDMEFV2_MESSAGE_WRITE_H
#define _LIBIDMEFV2_IDMEFV2_MESSAGE_WRITE_H

#include "libidmefv2-inttypes.h"
#include "idmefv2-time.h"
#include "libidmefv2-string.h"
#include "libidmefv2-io.h"

#ifdef __cplusplus
 extern "C" {
#endif

int idmefv2_address_write(idmefv2_address_t *address, libidmefv2_io_t *fd);
int idmefv2_user_id_write(idmefv2_user_id_t *user_id, libidmefv2_io_t *fd);
int idmefv2_node_name_write(idmefv2_node_name_t *node_name, libidmefv2_io_t *fd);
int idmefv2_location_write(idmefv2_location_t *location, libidmefv2_io_t *fd);
int idmefv2_interface_write(idmefv2_interface_t *interface, libidmefv2_io_t *fd);
int idmefv2_file_access_write(idmefv2_file_access_t *file_access, libidmefv2_io_t *fd);
int idmefv2_inode_write(idmefv2_inode_t *inode, libidmefv2_io_t *fd);
int idmefv2_checksum_write(idmefv2_checksum_t *checksum, libidmefv2_io_t *fd);
int idmefv2_stream_write(idmefv2_stream_t *stream, libidmefv2_io_t *fd);
int idmefv2_file_write(idmefv2_file_t *file, libidmefv2_io_t *fd);
int idmefv2_linkage_write(idmefv2_linkage_t *linkage, libidmefv2_io_t *fd);
int idmefv2_container_write(idmefv2_container_t *container, libidmefv2_io_t *fd);
int idmefv2_process_write(idmefv2_process_t *process, libidmefv2_io_t *fd);
int idmefv2_service_write(idmefv2_service_t *service, libidmefv2_io_t *fd);
int idmefv2_node_write(idmefv2_node_t *node, libidmefv2_io_t *fd);
int idmefv2_user_write(idmefv2_user_t *user, libidmefv2_io_t *fd);
int idmefv2_impact_type_write(idmefv2_impact_type_t *impact_type, libidmefv2_io_t *fd);
int idmefv2_source_write(idmefv2_source_t *source, libidmefv2_io_t *fd);
int idmefv2_target_write(idmefv2_target_t *target, libidmefv2_io_t *fd);
int idmefv2_original_data_write(idmefv2_original_data_t *original_data, libidmefv2_io_t *fd);
int idmefv2_observable_write(idmefv2_observable_t *observable, libidmefv2_io_t *fd);
int idmefv2_taken_action_write(idmefv2_taken_action_t *taken_action, libidmefv2_io_t *fd);
int idmefv2_reference_write(idmefv2_reference_t *reference, libidmefv2_io_t *fd);
int idmefv2_analyzer_write(idmefv2_analyzer_t *analyzer, libidmefv2_io_t *fd);
int idmefv2_additional_data_write(idmefv2_additional_data_t *additional_data, libidmefv2_io_t *fd);
int idmefv2_correlation_alert_write(idmefv2_correlation_alert_t *correlation_alert, libidmefv2_io_t *fd);
int idmefv2_analysis_data_write(idmefv2_analysis_data_t *analysis_data, libidmefv2_io_t *fd);
int idmefv2_confidence_write(idmefv2_confidence_t *confidence, libidmefv2_io_t *fd);
int idmefv2_impact_write(idmefv2_impact_t *impact, libidmefv2_io_t *fd);
int idmefv2_recommanded_action_write(idmefv2_recommanded_action_t *recommanded_action, libidmefv2_io_t *fd);
int idmefv2_assessment_write(idmefv2_assessment_t *assessment, libidmefv2_io_t *fd);
int idmefv2_classification_write(idmefv2_classification_t *classification, libidmefv2_io_t *fd);
int idmefv2_heartbeat_write(idmefv2_heartbeat_t *heartbeat, libidmefv2_io_t *fd);
int idmefv2_alert_write(idmefv2_alert_t *alert, libidmefv2_io_t *fd);
int idmefv2_message_write(idmefv2_message_t *message, libidmefv2_io_t *fd);


#ifdef __cplusplus
 }
#endif

#endif /* _LIBIDMEFV2_IDMEFV2_MESSAGE_WRITE_H */
